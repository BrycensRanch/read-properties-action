{"version":3,"sources":["../webpack:/read-properties-action/webpack/bootstrap","../webpack:/read-properties-action/src/run.ts","../webpack:/read-properties-action/src/main.ts"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","threw","__webpack_modules__","call","setSingleValue","key","value","core","debug","setOutput","run","async","inputs","file","propertiesFiles","glob","ignore","length","Error","warning","toLowerCase","endsWith","external_node_fs_default","existsSync","propertiesFile","properties","properties_file_lib","vE","all","Object","entries","info","property","defaultValue","default","start","Date","now","main","lib","getInput","type","required","disableable","catch","e","setFailed","String"],"mappings":"8trDACA,IAAAA,EAAA,GAGA,SAAAC,oBAAAC,GAEA,IAAAC,EAAAH,EAAAE,GACA,GAAAC,IAAAC,UAAA,CACA,OAAAD,EAAAE,QAGA,IAAAC,EAAAN,EAAAE,GAAA,CAGAG,QAAA,IAIA,IAAAE,EAAA,KACA,IACAC,EAAAN,GAAAO,KAAAH,EAAAD,QAAAC,EAAAA,EAAAD,QAAAJ,qBACAM,EAAA,MACA,QACA,GAAAA,SAAAP,EAAAE,GAIA,OAAAI,EAAAD,sp/ECZA,MAAAK,eAAA,CAAAC,EAAAC,KACAC,EAAAC,MAAA,qBAAAH,QAAAC,KACAC,EAAAE,UAAAJ,EAAAC,GAKAC,EAAAE,UAAA,QAAAH,GACAC,EAAAC,MAAA,qCAAAF,oCAGA,MAAAI,IAAAC,MAAAC,IACAL,EAAAC,MAAA,iBAAAI,EAAAC,QACA,MAAAC,QAAAC,KAAAH,EAAAC,KAAA,CAAAG,OAAA,CAAA,qBAAA,mBACAT,EAAAC,MAAA,4BAAAM,KAIA,GAAAA,EAAAG,SAAA,EAAA,MAAA,IAAAC,MAAA,0CAAAN,EAAAC,QAEA,GAAAC,EAAAG,OAAA,EACAV,EAAAY,QAAA,qDAAAL,EAAA,QAEA,IAAAA,EAAA,IAAAM,eAAAC,SAAA,eACA,MAAA,IAAAH,MAAA,QAAAJ,EAAA,+BAGA,IAAAA,EAAA,GAAA,MAAA,IAAAI,MAAA,QAAAJ,EAAA,mDAGA,IAAAQ,KAAAC,WAAAT,EAAA,IACA,MAAA,IAAAI,MAAA,QAAAJ,EAAA,gDAEA,MAAAU,EAAAV,EAAA,GACAP,EAAAC,MAAA,4BAAAgB,KACA,MAAAC,GAAA,EAAAC,GAAAC,IAAAH,GACA,GAAAZ,EAAAgB,IAAA,CACArB,EAAAC,MAAA,yDACA,IAAA,MAAAH,EAAAC,KAAAuB,OAAAC,QAAAL,GAAA,CACAlB,EAAAC,MAAA,qBAAAH,QAAAC,KACAC,EAAAE,UAAAJ,EAAAC,GAEAC,EAAAwB,KAAA,iDACA,OAEA,MAAAC,SAAAA,GAAApB,EACA,IAAAoB,EAAA,MAAA,IAAAd,MAAA,2BAEA,MAAAZ,EAAAmB,EAAAO,GACA,GAAA1B,EAAA,CACAC,EAAAC,MAAA,qBAAAwB,QAAA1B,KACAF,eAAA4B,EAAA1B,GACAC,EAAAwB,KAAA,gCAAAC,eACA,OAEA,MAAAC,EAAArB,EAAAsB,QACA,GAAAD,EAAA,CACA1B,EAAAC,MAAA,0BAAAyB,kBAAAD,4BACA5B,eAAA4B,EAAAC,GACA1B,EAAAwB,KAAA,gCAAAC,eACA,OAEA,MAAA,IAAAd,MAAA,YAAAc,mCCxEA,MAAAG,GAAAC,KAAAC,MAAAC,KAAA3B,UAEAJ,EAAAC,MAAA,uBACAE,IAAA,CACAG,MAAA,EAAA0B,EAAAC,UAAA,OAAA,CACAC,KAAA,SACAC,SAAA,OAEAV,UAAA,EAAAO,EAAAC,UAAA,WAAA,CACAC,KAAA,SACAC,SAAA,MACAC,YAAA,OAEAf,KAAA,EAAAW,EAAAC,UAAA,MAAA,CACAC,KAAA,UACAP,QAAA,MACAS,YAAA,OAEAT,SAAA,EAAAK,EAAAC,UAAA,UAAA,CACAC,KAAA,SACAC,SAAA,MACAC,YAAA,SAGApC,EAAAC,MAAA,YAAA4B,KAAAC,MAAAF,SAGAG,OAAAM,OAAAC,IACAtC,EAAAuC,UAAAD,aAAA3B,MAAA2B,EAAAE,OAAAF,IACAtC,EAAAC,MAAA,YAAA4B,KAAAC,MAAAF","file":"index.js","sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as core from \"@actions/core\";\n// Do not use fast-glob, it's bundle size is double the size of glob\nimport { glob } from \"glob\";\nimport fs from \"node:fs\";\nimport { propertiesToJson as propertiesToObject } from \"properties-file\";\n\ntype Inputs = {\n\tfile: string;\n\tproperty?: string;\n\tall?: boolean;\n\tdefault?: string;\n};\n\n// Kicking ass and taking names\n\nconst setSingleValue = (key: string, value: string): void => {\n\tcore.debug(`ðŸ§ª Setting output ${key} to ${value}`);\n\tcore.setOutput(key, value);\n\n\t// Legacy support for previous GitHub Action\n\t// Also for our integration tests that were stolen from the other GitHub Action :dab:\n\n\tcore.setOutput(\"value\", value);\n\tcore.debug(`ðŸ§“ Setting legacy output value to ${value} (for backwards compatibility)`);\n};\n\nexport const run = async (inputs: Inputs): Promise<void> => {\n\tcore.debug(`Got back file ${inputs.file}`);\n\tconst propertiesFiles = await glob(inputs.file, { ignore: [\"**/node_modules/**\", \"**/.gradle/**\"] });\n\tcore.debug(`Got back propertiesFiles ${propertiesFiles}`);\n\n\t// Basic sanity checks\n\n\tif (propertiesFiles.length === 0) throw new Error(`No properties files found with pattern ${inputs.file}`);\n\n\tif (propertiesFiles.length > 1)\n\t\tcore.warning(`Multiple properties files found, using first one (${propertiesFiles[0]}).`);\n\n\tif (!propertiesFiles[0]?.toLowerCase()?.endsWith(\".properties\"))\n\t\tthrow new Error(`File ${propertiesFiles[0]} is not a properties file`);\n\n\t/* istanbul ignore next */\n\tif (!propertiesFiles[0]) throw new Error(`File ${propertiesFiles[0]} is undefined/null... This should not happen!`);\n\n\t/* istanbul ignore next */\n\tif (!fs.existsSync(propertiesFiles[0]))\n\t\tthrow new Error(`File ${propertiesFiles[0]} does not exist... This should not happen!`);\n\n\tconst propertiesFile = propertiesFiles[0];\n\tcore.debug(`ðŸ¤” Using properties file ${propertiesFile}`);\n\tconst properties = propertiesToObject(propertiesFile);\n\tif (inputs.all) {\n\t\tcore.debug(\"ðŸ§ª Got all as true, setting all properties as outputs\");\n\t\tfor (const [key, value] of Object.entries(properties)) {\n\t\t\tcore.debug(`ðŸ§ª Setting output ${key} to ${value}`);\n\t\t\tcore.setOutput(key, value);\n\t\t}\n\t\tcore.info(\"ðŸš€ Successfully set all properties as outputs\");\n\t\treturn;\n\t}\n\tconst { property } = inputs;\n\tif (!property) throw new Error(\"Property is not defined\");\n\n\tconst value = properties[property];\n\tif (value) {\n\t\tcore.debug(`ðŸ§ª Setting output ${property} to ${value}`);\n\t\tsetSingleValue(property, value);\n\t\tcore.info(`ðŸš€ Successfully set property ${property} as output`);\n\t\treturn;\n\t}\n\tconst defaultValue = inputs.default;\n\tif (defaultValue) {\n\t\tcore.debug(`ðŸ§ª Got a default value ${defaultValue} for property ${property} returning that instead`);\n\t\tsetSingleValue(property, defaultValue);\n\t\tcore.info(`ðŸš€ Successfully set property ${property} as output`);\n\t\treturn;\n\t}\n\tthrow new Error(`Property ${property} not found in properties file`);\n};\n","import * as core from \"@actions/core\";\nimport { getInput } from \"action-input-parser\";\n\nimport { run } from \"./run\";\n\nconst start = Date.now(),\n\tmain = async (): Promise<void> => {\n\t\tcore.debug(\"âŒ› Starting...\");\n\t\tawait run({\n\t\t\tfile: getInput(\"file\", {\n\t\t\t\ttype: \"string\",\n\t\t\t\trequired: true,\n\t\t\t}) as string,\n\t\t\tproperty: getInput(\"property\", {\n\t\t\t\ttype: \"string\",\n\t\t\t\trequired: false,\n\t\t\t\tdisableable: true,\n\t\t\t}) as string,\n\t\t\tall: getInput(\"all\", {\n\t\t\t\ttype: \"boolean\",\n\t\t\t\tdefault: false,\n\t\t\t\tdisableable: true,\n\t\t\t}) as boolean,\n\t\t\tdefault: getInput(\"default\", {\n\t\t\t\ttype: \"string\",\n\t\t\t\trequired: false,\n\t\t\t\tdisableable: true,\n\t\t\t}) as string,\n\t\t});\n\t\tcore.debug(`âŒ› Ran in ${Date.now() - start}ms`);\n\t};\n\nmain().catch(e => {\n\tcore.setFailed(e instanceof Error ? e : String(e));\n\tcore.debug(`âŒ› Ran in ${Date.now() - start}ms`);\n});\n"]}