name: Build

on:
  push:
    branches:
      - "*"

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  build-and-test:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js 
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: ðŸ“¥ Monorepo install all deps & pnpm
        uses: ./.github/actions/pnpm-install

      # see https://github.com/vercel/next.js/pull/27362
      - name: Restore build from cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache
            ${{ github.workspace }}/.cache
          key: ${{ runner.os }}-action-${{ hashFiles('**/pnpm.lock') }}-${{ hashFiles('src/**.[jt]s?', '**/**.json') }}
          restore-keys: |
            ${{ runner.os }}-action-${{ hashFiles('**/pnpm.lock') }}-

      - name: ðŸ§ª Run Unit Tests
        uses: ArtiomTr/jest-coverage-report-action@v2

      - name: ðŸ‘€ Run Lint Check
        run: pnpm lint-check
      - name: ðŸ˜Ž Run Format Check
        run: pnpm format-check
      - name: ðŸ“¦ Run Types Check
        run: pnpm check-types
      
      - name: Build Action
        run: pnpm package

      - uses: codecov/codecov-action@v3
        name: ðŸ’£ Upload coverage to Codecov
        with:
          flags: unittests # optional
          name: codecov # optional
          fail_ci_if_error: true # optional (default = false)
          verbose: false # optional (default = false)

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: build
          path: ./lib
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build-and-test
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
      - name: ðŸ“¥ Monorepo install all deps & pnpm
        uses: ./.github/actions/pnpm-install
      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          # Neither of these work with semantic-release
          git_tag_gpgsign: false
          git_push_gpgsign: false
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_AUTHOR_EMAIL: ${{ steps.import_gpg.outputs.email }}
          GIT_COMMITTER_NAME: ${{ steps.import_gpg.outputs.name }}
          GIT_COMMITTER_EMAIL: ${{ steps.import_gpg.outputs.email }}
          signingKeyId: ${{ steps.import_gpg.outputs.keyid }}
          signingKey: ${{ secrets.GPG_PRIVATE_KEY }}
          signingPassword: ${{ secrets.PASSPHRASE }}
          GH_URL: "https://api.github.com/"
        run: pnpm semantic-release